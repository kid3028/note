1、AtomicInteger底层实现原理？
答：111111








2、synchronized与ReentraLock哪个是公平锁？








3、CAS机制会出现什么样的问题？






4、用过并发包下的哪些类？





5、一个线程连着调用两次start方法会出现什么情况？




6、wait方法能不能被重写，waite能不能被中断？








7、线程池的实现？四种线程池？重要参数及其原理？任务拒绝策略有哪几种？








8、线程状态以及API怎么操作会发生这种转换？







9、常用的避免死锁的方法？







10、说说什么是线程安全，如何保证线程安全？




11、什么是重入锁？重入锁为什么可以防止死锁？







12、产生死锁的四个条件？（互斥、请求与保持、不剥夺、循环等待）？




13、如何检查死锁（通过jConsole检查死锁）？







14、volatile实现原理（禁止指令重排、刷新内存）？




15、synchronized实现原理（对象监听器）？






16、synchronized与lock的区别？






17、AQS同步队列？







18、CAS无锁概念、乐观锁和悲观锁？







19、常见原子操作类？








20、什么是ABA问题？出现ABA问题JDK如何解决？







21、乐观锁的业务场景及实现方式？






22、介绍并发包的并发类？







23、偏向锁、轻量级锁、重量级锁、自旋锁概念







